buildscript {
    ext {
        springBootVersion = '2.6.2'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group 'org.example'
    version '1.0-SNAPSHOT'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    compileJava.options.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'

        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    }
    test {
        useJUnitPlatform()
    }
}

// 각 프로젝트에서만 사용하는 의존성 추가
project(':module-core') {

    // core 에서는 bootjar로 패키징 할 필요가 없으므로 추가
    bootJar.enabled = false
    jar.enabled = true

    dependencies {
    }
}

project(':module-batch') {
    bootJar { enabled = true }
    jar { enabled = false }

    dependencies {
        compileOnly project(':module-core') // 컴파일 시 velog-core project 로딩
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }
}

project(':module-service') {
    bootJar { enabled = true }
    jar { enabled = false }

    dependencies {
        compileOnly project(':module-core') // 컴파일 시 velog-core project 로딩
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }
}
